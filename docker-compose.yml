version: '3.9'

services:

  db:
    image: postgres:15.3-alpine3.18
    container_name: main-db
    environment:
      POSTGRES_PASSWORD: ${PG_MDCLONE_PASSWORD-postgres}
      POSTGRES_USER: ${PG_MDCLONE_USER-postgres}
    networks:
      backend:
        aliases:
          - ${PG_MDCLONE_HOST}
    ports:
      - '5432:5432'
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready' ]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    profiles:
      - queue-dev
      - local-dev
    image: rabbitmq:3.12.1-management-alpine
    container_name: rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - '15672:15672'
      - '5672:5672'
    networks:
      - backend

  sftp-server:
    profiles:
      - local-dev
    image: atmoz/sftp:latest
    container_name: sftp-server
    restart: always
    ports:
      - "${SFTP_PORT}:${SFTP_PORT}"
    command:
      - ${SFTP_USERNAME}:${SFTP_PASSWORD}:1001::${SFTP_DEFAULT_FOLDER}
    volumes:
      - ./sftp/${SFTP_DEFAULT_FOLDER}:/home/${SFTP_USERNAME}/${SFTP_DEFAULT_FOLDER}
      - ./sftp/keys/ssh_host_rsa_key.pub:/home/${SFTP_USERNAME}/.ssh/ssh_host_rsa_key.pub:ro
      - ./sftp/keys/ssh_host_ed25519_key.pub:/home/${SFTP_USERNAME}/.ssh/ssh_host_ed25519_key.pub:ro
    networks:
      - backend

volumes:
  postgres-data:

networks:
  backend:
  frontend:
